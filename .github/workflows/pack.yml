name: Build and publish

on:
  push:
    branches:
      - master
      - release
    tags:
      - '*'

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: pppy/osu-queue-score-statistics
            context: ./osu.Server.Queues.ScoreStatisticsProcessor
            file: ./osu.Server.Queues.ScoreStatisticsProcessor/Dockerfile
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ matrix.image }}
          # generate Docker tags based on the following events/attributes
          # on tag event: tag using git tag, and as latest if the tag doesn't contain hyphens (pre-releases)
          # on push event: tag using git sha, branch name and as latest-dev
          tags: |
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' && !contains(github.ref_name, '-') }}
            type=raw,value=latest-dev,enable=${{ github.ref_type == 'branch' && github.ref_name == 'master' }}
            type=raw,value=${{ github.ref_name }}
            type=raw,value=${{ github.sha }},enable=${{ github.ref_type == 'branch' }}
          flavor: |
            latest=false
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_to_staging:
    if: ${{ github.ref_type == 'branch' }}
    runs-on: ubuntu-latest
    needs:
      - push_to_registry
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Repository Dispatch
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.KUBERNETES_CONFIG_REPO_ACCESS_TOKEN }}
          repository: ppy/osu-kubernetes-config
          event-type: dev-ppy-sh-deploy
          client-payload: '{ "values": { "osu-queue-score-statistics": { "image": { "tag": "${{ github.sha }}" } } } }'

  notify_pending_deploy:
    if: ${{ github.ref_type == 'tag' && !contains(github.ref_name, '-') }}
    runs-on: ubuntu-latest
    needs:
      - push_to_registry
    steps:
      -
        name: Submit pending deployment notification
        run: |
          export TITLE="Pending osu-queue-score-statistics Production Deployment: $GITHUB_REF_NAME"
          export URL="https://github.com/ppy/osu-queue-score-statistics/actions/runs/$GITHUB_RUN_ID"
          export DESCRIPTION="Awaiting approval for building private image and production deployment:  
          [View Workflow Run]($URL)"
          export ACTOR_ICON="https://avatars.githubusercontent.com/u/$GITHUB_ACTOR_ID"

          BODY="$(jq --null-input '{
            "embeds": [
              {
                "title": env.TITLE,
                "color": 15098112,
                "description": env.DESCRIPTION,
                "url": env.URL,
                "author": {
                  "name": env.GITHUB_ACTOR,
                  "icon_url": env.ACTOR_ICON
                }
              }
            ]
          }')"

          curl \
            -H "Content-Type: application/json" \
            -d "$BODY" \
            "${{ secrets.DISCORD_INFRA_WEBHOOK_URL }}"

  trigger_private_build:
    if: ${{ github.ref_type == 'tag' && !contains(github.ref_name, '-') }}
    runs-on: ubuntu-latest
    needs:
      - push_to_registry
    environment: production
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Invoke tag workflow in private repo
        uses: benc-uk/workflow-dispatch@25b02cc069be46d637e8fe2f1e8484008e9e9609 # v1.2.3
        with:
          token: ${{ secrets.KUBERNETES_CONFIG_REPO_ACCESS_TOKEN }}
          repo: ppy/osu-queue-score-statistics-private
          ref: master
          workflow: tag.yml
          inputs: '{ "tag": "${{ github.ref_name }}" }'
